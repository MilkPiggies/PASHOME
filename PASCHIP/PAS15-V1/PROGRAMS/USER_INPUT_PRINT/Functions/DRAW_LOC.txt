### DRAW LINE LOCATION ###
!END = 0x0A
!RET = 0x0C



//SET_GLOBAL_BRANCHES
NOP $  0x00

	//WRITE !END
	NOP $  0x00

		//POINT STACK TO A
		NOP $  0x00
		LDY $# 0x0A
		SSP $  0x00

		//SEND !ENDY TO STACK
		NOP $  0x00
		LDA $# 0x00 (!ENDY) [0]
		PHA $  0x00 (should be on 0x0A on stack)

		//SEND !ENDX TO STACK
		NOP $  0x00
		LDA $# 0x3E (!ENDX) [3E]
		PHA $  0x00 (should be on 0x0B on stack)

	//WRITE !RET
	NOP $  0x00

		//POINT STACK TO C (stack already pointed to C)
		NOP $  0x00
		LDY $# 0x0C
		SSP $  0x00

		//SEND !RETY TO STACK
		NOP $  0x00
		LDA $# 0x00 (!RETY) [00]
		PHA $  0x00 (should be on 0x0C on stack)

		//SEND !RETX TO STACK
		NOP $  0x00
		LDA $# 0x1B (!RETX) [1B]
		PHA $  0x00 (should be on 0x0D on stack)



//INITIALIZE
NOP $  0x00

	//SET A TO 0
	LDA $# 0x00
	
	//SET B TO 0
	LDB $# 0x00
	
	//SET X TO 0
	LDX $# 0x00
	
	//SET Y TO 0
	LDY $# 0x00



//CHECK
NOP $  0x00

//SET STACK POSITION TO !ENDY
LDY $# 0x0A 
SSP $  0x00		

//pull @Y from stack (!ENDY)	
PLA $  0x00

//transfer A to Y
TAY $  0x00

//SET STACK POSITION WITH ADDS TO !ENDX
SPP $  0x00
SPP $  0x00

//pull @X from stack (!ENDX)
PLA $  0x00

//transfer A to X
TAX $  0x00

SBRK $  0x00

LDA $# 0x0A
CMP $  0x00

BEQ $  0x00 (branch if @A is equal to @B)



//CONTINUE
NOP $  0x00



//SYNC
NOP $  0x00

TBX $  0x00



//PUT_LOCATION
NOP $  0x00

LDY $# 0x01 ?(for first line)

SESEGLOC $  0x00



//ADD
NOP $  0x00

LDA $# 0x01

ADD $  0x00

TAB $  0x00



//RETURN
NOP $  0x00

//SET STACK POSITION TO !RETY
LDY $# 0x0C 
SSP $  0x00		

//pull @Y from stack (!RETY)	
PLA $  0x00

//transfer A to Y
TAY $  0x00

//SET STACK POSITION WITH ADDS TO !RETX
SPP $  0x00
SPP $  0x00

//pull @X from stack (!RETX)
PLA $  0x00

//transfer A to X
TAX $  0x00

SBRK $  0x00


NOP $  0x00
BR $  0x00



//EXIT
NOP $  0x00
LDX $# 0x00
INT $  0x00